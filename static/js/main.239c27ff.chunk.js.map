{"version":3,"sources":["redux/users_reducer.js","api/reactAPI.js","Components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","redux/login_selector.js","Components/Footer/Footer.module.css","Assets/Images/Gear.gif","Components/common/prelouder/preloader.module.css","Assets/Images/world.jpg","Components/Nav/Nav.module.css","serviceWorker.js","redux/profile_reducer.js","redux/dialogs_reducer.js","redux/app_reducer.js","redux/redux_store.js","Components/Nav/Nav.jsx","Components/Footer/Footer.jsx","Components/Dialogs/Dialog/Dialog.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","redux/dialogs_selector.js","Components/Dialogs/DialogsContainer.jsx","Components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","Components/Profile/ProfileInfo/ProfileStatus/ProfileStatusHook.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","redux/myPosts_selector.js","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","redux/profile_selector.js","Components/Profile/ProfileContainer.jsx","Components/Header/Header.jsx","redux/header_selector.js","Components/Header/HeaderContainer.jsx","Components/Main/main.jsx","hoc/withSuspense .jsx","App.js","index.js","redux/auth_reducer.js","Components/Dialogs/Dialogs.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Header/Header.module.css","Components/Dialogs/Dialog/Dialog.module.css","Components/common/formControles/formControler.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/common/formControles/formControler.jsx","Utils/Validators/validators.js","hoc/withAuthRedirect.jsx","Components/common/prelouder/prelouder.jsx","Components/Main/main.module.css","Components/Dialogs/Message/Message.module.css"],"names":["initialState","users","pageSize","totalUserCount","currentPage","pages","pagesPartCount","isFetching","followingInProgress","followAC","userid","type","unfollowAC","setUsersAC","toogleIsFetchingAC","setUserFollowedStatusAC","status","toogleFollowingProgresAC","isProgress","getUserThunkCreator","dispatch","a","async","userAPI","getUser","response","data","docs","totalCount","total","forEach","u","getUserFollowCurrentStatus","_id","isfollowed","getUsers","Page","page","setFollow","getFollow","resultCode","setUnfollow","getUnfollow","usersReducer","state","action","map","followed","filter","id","instance","axios","withCredentials","baseURL","post","delete","get","profileAPI","getUserProfileAPI","getStatus","updateStatus","put","getPosts","setPost","authAPI","setNewUser","firstName","lastName","birthday","gender","country","city","email","password","repassword","setAuthentificate","setLogin","rememberMe","setLogout","module","exports","getIsAuthSelector","createSelector","auth","isAuth","Boolean","window","location","hostname","match","posts","userprofile","addPost","setStatus","profileReducer","massege","like","postsArray","newpost","push","dialogs","name","imgPath","messages","who","message","dialogsReducer","newMessageBody","initialazed","appReducer","reducers","combineReducers","profilePage","messagesPage","usersPage","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Nav","className","n_css","A","to","activeClassName","active","Footer","f_css","Dialog","props","path","s","dialog","src","img","dialogImg","alt","dialogPerson","Message","classname","my","your","maxLength300","maxLengthCreator","AddMessageFormRedux","reduxForm","onSubmit","handleSubmit","messagesElements","messageinput","Field","validate","component","TextArea","placeholder","messageTextArea","messageBtn","Dialogs","dialogsElements","d","key","m","newMessageArea","React","createRef","dialogs_items","values","addMessage","getMessagesPageSelector","connect","addMessageActionCreator","withAuthRedirect","Component","ProfileStatusHook","memo","useState","editMode","setEditMode","useEffect","console","log","statusContainer","statusinput","onChange","e","currentTarget","value","autoFocus","statusBar","onClick","btn","update","cancel","onDoubleClick","ProfileInfo","imgWBorder","imgW","imageWall","imgA","image","descript","description","Post","avatar","postContent","likeNumber","MyPostReduxForm","textarea","MyPosts","postsElements","p","myposts","setNewPost","newPostBody","getProfilePageSelector","getUserProfileSelector","MyPostContainer","this","Profile","a_css","Article","MyPostsContainer","getUserprofileSelector","getAuthUserIdSelector","authUserId","getStatusSelector","ProfileContainer","params","userId","setUserProfileThunk","withRouter","Header","login","username","LogOut","signout","getUsernameSelector","getImageSelector","HeaderContainer","setAuthentication","MainPage","main","world","txt","withSuspense","fallback","LoginContainer","lazy","UsersContainer","Settings","Music","News","SignUpContainer","App","initialazAPP","render","DialogsContainer","AppCompose","promise","Promise","all","then","AppContainer","basename","process","rerenderEnireTree","ReactDOM","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","registration","unregister","setAuthUserData","user","SetLoginDate","alert","stopSubmit","disputch","SetNewUser","input","meta","hasError","touched","error","Input","required","maxLength","length","minLengthCreator","minLength","mapStateToProps","RedirectComponent","Prelouder","preloader"],"mappings":"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","file":"static/js/main.239c27ff.chunk.js","sourcesContent":["import { userAPI, } from '../../src/api/reactAPI';\r\n\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst FOLLOW = 'FOLLOW';\r\nconst SET_USER_FOLLOWED_STATUS = 'SET_USER_FOLLOWED_STATUS';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USER_COUNT = 'SET_TOTAL_USER_COUNT';\r\nconst SET_PAGES_COUNT = 'SET_PAGES_COUNT';\r\nconst TOOGLE_IS_FETCHING = 'TOOGLE_IS_FETCHING';\r\nconst TOOGLE_IS_FOLLOWING_PROGRESS = 'TOOGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    \r\n    users: [],\r\n    pageSize: 2,\r\n    totalUserCount: 10,\r\n    currentPage: 1,\r\n    pages: null,\r\n    pagesPartCount: 10,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u =>{\r\n                    if(u._id === action.userid){\r\n                        return {...u, followed: true};\r\n                    }\r\n                    return u;\r\n                }) \r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u =>{\r\n                    if(u._id === action.userid){\r\n                        return {...u, followed: false};\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USER_FOLLOWED_STATUS:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u =>{\r\n                    if(u._id === action.userid){\r\n                        return {...u, followed: action.status};\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            }\r\n        case SET_TOTAL_USER_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUserCount: action.totalCount\r\n            }\r\n        case SET_PAGES_COUNT:\r\n            return {\r\n                ...state,\r\n                pages: action.pages\r\n            }\r\n        case TOOGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOOGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isProgress\r\n                    ? [...state.followingInProgress, action.userid]\r\n                    : state.followingInProgress.filter(id => id !== action.userid)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followAC = (userid) => ({type: FOLLOW, userid});\r\nexport const unfollowAC = (userid) => ({type: UNFOLLOW, userid});\r\nexport const setUsersAC = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPageAC = (page) =>({type: SET_CURRENT_PAGE, page});\r\nexport const setTotalUserCountAC = (totalCount) =>({type: SET_TOTAL_USER_COUNT, totalCount});\r\nexport const setPagesCountAC = (pages) =>({type: SET_PAGES_COUNT, pages});\r\nexport const toogleIsFetchingAC = (isFetching) =>({type: TOOGLE_IS_FETCHING, isFetching});\r\nexport const setUserFollowedStatusAC = (userid, status) =>({type: SET_USER_FOLLOWED_STATUS, userid: userid, status: status});\r\nexport const toogleFollowingProgresAC = (isProgress, userid) => ({type: TOOGLE_IS_FOLLOWING_PROGRESS, isProgress, userid});\r\n\r\nexport const getUserThunkCreator = (currentPage, pageSize) => async (dispatch) =>{\r\n    dispatch(toogleIsFetchingAC(true));\r\n    let response = await userAPI.getUser(currentPage, pageSize)\r\n    dispatch(toogleIsFetchingAC(false));\r\n    dispatch(setUsersAC(response.data.docs));\r\n    dispatch(setTotalUserCountAC(response.data.total));\r\n    dispatch(setPagesCountAC(response.data.pages));\r\n    response.data.docs.forEach( async u => {\r\n        let response = await userAPI.getUserFollowCurrentStatus(u._id);\r\n        dispatch(setUserFollowedStatusAC(u._id, response.data.isfollowed));\r\n    })\r\n}\r\n\r\nexport const getUsers = (Page, pageSize,) => async (dispatch) => {\r\n    dispatch(toogleIsFetchingAC(true));\r\n    dispatch(setCurrentPageAC(Page));\r\n    let response = await userAPI.getUser(Page, pageSize);\r\n    dispatch(toogleIsFetchingAC(false));\r\n    dispatch(setUsersAC(response.data.docs));\r\n    response.data.docs.forEach( async u => {\r\n        let response = await userAPI.getUserFollowCurrentStatus(u._id);\r\n        dispatch(setUserFollowedStatusAC(u._id, response.data.isfollowed));\r\n    });\r\n}\r\n\r\nexport const setFollow = (userid) => async (dispatch) => {\r\n    dispatch(toogleFollowingProgresAC(true, userid));\r\n    let response = await userAPI.getFollow(userid);\r\n    let resultCode = response.data.resultCode;\r\n    if(resultCode === 0){\r\n        dispatch(followAC(userid));\r\n    }\r\n    dispatch(toogleFollowingProgresAC(false, userid)); \r\n}\r\n\r\nexport const setUnfollow = (userid) => async(dispatch) =>{\r\n    dispatch(toogleFollowingProgresAC(true, userid));\r\n    let response = await userAPI.getUnfollow(userid);\r\n    let resultCode = response.data.resultCode;\r\n    if(resultCode === 0){\r\n        dispatch(unfollowAC(userid));    \r\n    }\r\n    dispatch(toogleFollowingProgresAC(false, userid));             \r\n} \r\n\r\nexport default usersReducer;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'http://localhost:4000'\r\n})\r\n\r\nexport const userAPI = {\r\n    getFollow (id){\r\n        return instance.post(`/follow/${id}`, {},);\r\n    },\r\n\r\n    getUnfollow (id){\r\n        return instance.delete(`/follow/${id}`,);\r\n    },\r\n    \r\n    getUser (currentPage, pageSize ) {\r\n        return instance.get(`/users?page=${currentPage}&pageSize=${pageSize}`,)\r\n    },\r\n    \r\n    getUserFollowCurrentStatus (id) {\r\n        return instance.get(`/follow/${id}`,)\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getUserProfileAPI(userid){\r\n        return  instance.get(`/users/${userid}`)\r\n    },\r\n\r\n    getStatus(userid){\r\n        return instance.get(`/profile/status/${userid}`);\r\n    },\r\n\r\n    updateStatus(status){\r\n        return instance.put('/profile/status', {status: status} );\r\n    },\r\n\r\n    getPosts(){\r\n        return instance.get('/profile/posts');\r\n    },\r\n\r\n    setPost(post){\r\n        return instance.post('/profile/posts', {post: post});\r\n    }\r\n    \r\n}\r\n\r\nexport const authAPI = {\r\n    setNewUser(firstName, lastName, birthday, gender, country, city, email, password, repassword){\r\n        return instance.post('/registration', {firstName, lastName, birthday, gender, country, city, email, password, repassword});\r\n    },\r\n\r\n    setAuthentificate(){\r\n        return instance.get(`/login`);\r\n    },\r\n\r\n    setLogin(email, password, rememberMe){\r\n        return instance.post('login', {email, password, rememberMe});\r\n    },\r\n\r\n    setLogout(){\r\n        return instance.delete('login');\r\n    }\r\n    \r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusContainer\":\"ProfileStatus_statusContainer__Jvqbk\",\"status\":\"ProfileStatus_status__iUMCY\",\"statusinput\":\"ProfileStatus_statusinput__17T9v\",\"statusBar\":\"ProfileStatus_statusBar__1oIm2\",\"btn\":\"ProfileStatus_btn__euFrZ\",\"update\":\"ProfileStatus_update__3tX29\",\"cancel\":\"ProfileStatus_cancel__2Om7J\"};","import { createSelector } from \"reselect\";\r\n\r\nconst getIsAuth = (state) => {\r\n    return state.auth.isAuth;\r\n}\r\n\r\nexport const getIsAuthSelector = createSelector(getIsAuth, (isAuth) => {\r\n    return isAuth;\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__1qwXj\"};","module.exports = __webpack_public_path__ + \"static/media/Gear.9a4e9cdc.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"preloader_img__1vkom\"};","module.exports = __webpack_public_path__ + \"static/media/world.05ed7f2a.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Nav_Nav__3N-xb\",\"A\":\"Nav_A__TUhbL\",\"active\":\"Nav_active__195wZ\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { profileAPI } from \"../api/reactAPI\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SET_POSTS = 'SET_POSTS';\r\n\r\nlet initialState ={\r\n    posts: [],\r\n    userprofile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type){\r\n        case ADD_POST:\r\n            return{\r\n                ...state,\r\n                posts: [...state.posts, {id: 3, massege: action.post, like: 3}]\r\n            }\r\n            // let newPost = {\r\n            //     id: 3,\r\n            //     massege: state.newPostText,\r\n            //     like: 3\r\n            // };\r\n\r\n\r\n            // stateCopy.posts.push(newPost);\r\n            // stateCopy.newPostText = '';\r\n            // return stateCopy;\r\n            case SET_USER_PROFILE:\r\n                return {\r\n                    ...state,\r\n                    userprofile: action.userprofile\r\n                }\r\n            case SET_STATUS:\r\n                return {\r\n                    ...state,\r\n                    status: action.status\r\n                }\r\n            case SET_POSTS:\r\n                let postsArray = []\r\n                action.posts.forEach(post => {\r\n                    let newpost ={id: 3, massege: post, like: 3}\r\n                    postsArray.push(newpost);\r\n                });\r\n                return {\r\n                    ...state,\r\n                    posts: [...postsArray]\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport const addPost = (post) =>({type: ADD_POST, post});\r\nexport const setUserProfile = (userprofile) =>({type: SET_USER_PROFILE, userprofile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const setAllPosts = (posts) =>({type: SET_POSTS, posts});\r\n\r\nexport const setUserProfileThunk = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getUserProfileAPI(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data)) \r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    dispatch(setStatus(response.data)); \r\n}\r\n\r\nexport const setNewPost = (post) => async (dispatch) =>{\r\n    let response = await profileAPI.setPost(post)\r\n    dispatch(addPost(response.data))   \r\n}\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n    let response = await profileAPI.getPosts()\r\n    dispatch(setAllPosts(response.data));\r\n}\r\n\r\nexport default profileReducer;","const ADD_MESSAGE ='ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n\r\n    dialogs: [\r\n        {id: 1, name: 'Lilit', imgPath: 'https://scontent.fbcn7-1.fna.fbcdn.net/v/t1.0-9/s960x960/48384900_2084009431663738_4711796650920640512_o.jpg?_nc_cat=106&_nc_ohc=CELcgzP3EVcAQkXAUlm1cHhmtdnj1rNjssE63DvqtHaCvP0qIHkp9b4Ug&_nc_ht=scontent.fbcn7-1.fna&oh=9dbda02c2a23c49728e0d479a395a375&oe=5EAF332E'},\r\n        {id: 2, name: 'Vardan', imgPath: 'https://scontent.fbcn7-1.fna.fbcdn.net/v/t1.0-9/51966802_1177465575769314_1384875877761810432_n.jpg?_nc_cat=101&_nc_ohc=Gt9gPBv3-h0AQn3Rp3kAzzQkRuz1OgToZMYzLE71dTCsexBczaf4wsgyA&_nc_ht=scontent.fbcn7-1.fna&oh=6051e3f1e344549bb85e755dcc318240&oe=5E75A922'},\r\n        {id: 3, name: 'Aram', imgPath: 'https://scontent.fbcn7-1.fna.fbcdn.net/v/t1.0-9/77024476_2547460382036967_7136849483911921664_n.jpg?_nc_cat=110&_nc_ohc=i8kZyWN5HsQAQkWvdQcaBu9UvznSPtj4CGlPllyJUFMP9hnT3A8pzu03w&_nc_ht=scontent.fbcn7-1.fna&oh=57879940d057766cee09ed439924879c&oe=5EA66730'},\r\n        {id: 4, name: 'Taron', imgPath: 'https://scontent.fbcn7-1.fna.fbcdn.net/v/t1.0-9/s960x960/59380286_10205949631858005_8010687655756955648_o.jpg?_nc_cat=110&_nc_ohc=jMJajK4RqYsAQm5nHb0IUQBDKN_WD6g_sWmNcANnHXoHw_aYHEV2T9rtA&_nc_ht=scontent.fbcn7-1.fna&oh=1819799f4ab77ce7758a5aa750509a1f&oe=5EAE0EB0'},\r\n        {id: 5, name: 'Armen', imgPath: 'https://scontent.fbcn7-1.fna.fbcdn.net/v/t1.0-9/67661291_1083223918535508_1410093451822759936_n.jpg?_nc_cat=107&_nc_ohc=1doEB6vACy8AQmBU4-WE7xUK54hgS37tjk5L0kgOTBRQX92RA1cJNTCFw&_nc_ht=scontent.fbcn7-1.fna&oh=22455a8310052723182ee1c123320b9f&oe=5E9FDD79'},\r\n    ],\r\n    \r\n    messages: [\r\n        {id: 1, who: 'my', message: 'Hi'},\r\n        {id: 2, who: 'your', message: 'Hi'},\r\n        {id: 3, who: 'my', message: 'How are you?'},\r\n        {id: 4, who: 'your', message: 'I am good'},\r\n        {id: 5, who: 'your', message: 'And You?'},\r\n        {id: 6, who: 'my', message: 'I am too'},\r\n        {id: 7, who: 'my', message: 'What are you doing?'},\r\n    ],\r\n\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type){\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 8, who: 'my', message: action.newMessageBody}]\r\n            };\r\n\r\n            // let newMessage = {\r\n            // id: 8,\r\n            // who: 'my',\r\n            // message: state.UpdateMessageText\r\n            // }\r\n\r\n            // stateCopy.messages.push(newMessage);\r\n            // stateCopy.UpdateMessageText = '';\r\n            // return stateCopy;\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessageBody) =>{\r\n    return{\r\n        type: ADD_MESSAGE,\r\n        newMessageBody\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default dialogsReducer;","import { setAuthentication } from \"./auth_reducer\";\r\n\r\nconst SET_INITIALAZED ='SET_INITIALAZED';\r\n\r\nlet initialState ={\r\n    initialazed: true\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SET_INITIALAZED:\r\n            return{\r\n                ...state,\r\n                initialazed: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initialazedSucsses = () => ({type: SET_INITIALAZED});\r\n\r\nexport const initialazAPP = () => (dispatch) => {\r\n    let promise = dispatch(setAuthentication());\r\n\r\n    Promise.all([promise]).then( () => {\r\n        dispatch(initialazedSucsses());\r\n    })\r\n}\r\n\r\nexport default appReducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from './profile_reducer';\r\nimport dialogsReducer from './dialogs_reducer';\r\nimport usersReducer from \"./users_reducer\";\r\nimport authReducer from \"./auth_reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app_reducer\";\r\n\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;//Բրաուզերի կոնսիլում մուտքագրում ենք store.getState() մեթոդը և ստանում ենք store պարունակությունը\r\n\r\nexport default store;","import React from 'react';\r\nimport n_css from './Nav.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Nav = () =>{\r\n    return(\r\n    <nav className={n_css.Nav}>\r\n        <section className={n_css.A}>\r\n          <NavLink  to=\"/profile\" activeClassName={n_css.active}>Profile</NavLink>\r\n        </section>\r\n        <section className={n_css.A}>\r\n          <NavLink to=\"/dialogs\" activeClassName={n_css.active}>Messages</NavLink>\r\n        </section>\r\n        <section className={n_css.A}>\r\n          <NavLink to='/friends' activeClassName={n_css.active}>Friends</NavLink>        \r\n        </section>\r\n        <section className={n_css.A}>\r\n          <NavLink to=\"/news\" activeClassName={n_css.active}>News</NavLink>\r\n        </section>\r\n        <section className={n_css.A}>\r\n          <NavLink to=\"/music\" activeClassName={n_css.active}>Music</NavLink>\r\n        </section>\r\n        <section className={n_css.A}>\r\n          <NavLink to='/users' activeClassName={n_css.active}>Users</NavLink>        \r\n        </section>\r\n        <section className={n_css.A}>\r\n          <NavLink to=\"/settings\" activeClassName={n_css.active}>Setting</NavLink>\r\n        </section>\r\n      </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport f_css from './Footer.module.css';\r\n\r\nconst Footer = () =>{\r\n    return(\r\n        <footer className={f_css.Footer}>\r\n             Footer\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport s from './Dialog.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Dialog = (props) =>{\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return(   \r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img src={props.img} className={s.dialogImg} alt=\"\"/>\r\n            <NavLink to={path} className={s.dialogPerson}>{props.name}</NavLink>     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) =>{\r\n    \r\n    if(props.who ==='my'){\r\n        var classname = s.my;\r\n    }else{\r\n        classname = s.your;\r\n    }\r\n     \r\n\r\n    return(\r\n        <div className={classname}>{props.message}</div> \r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Dialog from './Dialog/Dialog';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { TextArea } from '../common/formControles/formControler';\r\nimport { maxLengthCreator } from '../../Utils/Validators/validators';\r\n\r\nlet maxLength300 = maxLengthCreator(300)\r\n\r\n\r\nconst addMessageForm = (props) => {\r\n    return(\r\n        \r\n        <form className={s.messages} onSubmit={props.handleSubmit}>\r\n            {props.messagesElements}\r\n            <section className={s.messageinput}>\r\n                <Field validate={[maxLength300]} name='newMessageBody' component={TextArea} placeholder=\"Enter your message...\" className={s.messageTextArea} />\r\n            </section>\r\n            \r\n            <button className={s.messageBtn} >Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: 'addMessageDialogsForm' })(addMessageForm);\r\n\r\n\r\nconst Dialogs = (props) =>{\r\n\r\n    let dialogsElements = props.messagesPage.dialogs.map(d => <Dialog name={d.name} id={d.id} img={d.imgPath} key={d.id} />); // map() մեթոդը մասիվը փոևակերպում է մեկ այլ մեթոդի\r\n\r\n    let messagesElements = props.messagesPage.messages.map(m => <Message message={m.message} who={m.who} key={m.id} /> );\r\n\r\n    let newMessageArea = React.createRef();\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    }\r\n\r\n    return(\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs_items}>\r\n               {dialogsElements}\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} newMessageArea={newMessageArea} messagesElements={messagesElements}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Dialogs;\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst getMessagesPage = (state) => {\r\n    return state.messagesPage;\r\n}\r\n\r\nexport const getMessagesPageSelector = createSelector(getMessagesPage, (messagesPage) => {\r\n    return messagesPage;\r\n})","import {addMessageActionCreator} from '../../redux/dialogs_reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getMessagesPageSelector } from '../../redux/dialogs_selector';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: getMessagesPageSelector(state),\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        addMessage: (newMessageBody) => {dispatch(addMessageActionCreator(newMessageBody))},\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);\r\n\r\n// let AuthDialogContainer = withAuthRedirect(Dialogs);\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthDialogContainer);\r\n\r\n// export default DialogsContainer;\r\n","import React from 'react';\r\nimport s from './ProfileStatus.module.css';\r\n\r\nclass ProfileStatus extends React.Component{\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    cancalChangePost = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n    }\r\n\r\n    onChangeStatus = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    } \r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevProps.state !== this.props.state){\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <section>\r\n                {this.state.editMode ? \r\n                    <section id={s.statusinput}>\r\n                        <input onChange={this.onChangeStatus} autoFocus={true} id={s.statusBar} type=\"text\" value={this.state.status}/>\r\n                        <input onClick={this.deactivateEditMode.bind(this)} className={s.btn} id={s.update} type=\"button\" value=\"Update\"/>\r\n                        <input onClick={this.cancalChangePost} type=\"button\" value=\"Cancel\" className={s.btn} id={s.cancel} />\r\n                    </section> \r\n                    : \r\n                    <section>\r\n                        <span onDoubleClick={this.activateEditMode.bind(this)} id={s.status}>{this.props.status} </span>\r\n                    </section>\r\n                }\r\n            </section>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileStatus.module.css';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nconst ProfileStatusHook = React.memo((props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () =>{\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n    \r\n    const activateEditMode = () => {\r\n        debugger;\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        props.updateStatus(status);\r\n        setEditMode(false);\r\n    }\r\n\r\n    const cancelChangePost = () => {\r\n        setEditMode(false);\r\n    }\r\n\r\n\r\n    const onStatusChange = (e) => {\r\n        debugger;\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    console.log('Render');\r\n    \r\n    return(\r\n        <section id={s.statusContainer}>\r\n            {editMode ? \r\n                <section id={s.statusinput}>\r\n                    <input onChange={onStatusChange} autoFocus={true} id={s.statusBar} type=\"text\" value={status} />\r\n                    <input onClick={deactivateEditMode} className={s.btn} id={s.update} type=\"button\" value=\"Update\"/>\r\n                    <input onClick={cancelChangePost} type=\"button\" value=\"Cancel\" className={s.btn} id={s.cancel} />\r\n                </section> \r\n                : \r\n                <section>\r\n                    <span onDoubleClick={activateEditMode} id={s.status}>{props.status} </span>\r\n                </section>\r\n            }\r\n        </section>\r\n    )   \r\n})\r\n\r\nexport default ProfileStatusHook;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Prelouder from '../../common/prelouder/prelouder';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\nimport ProfileStatusHook from './ProfileStatus/ProfileStatusHook';\r\n\r\nconst ProfileInfo = (props) =>{\r\n    if(!props.userprofile){\r\n        return(\r\n            <Prelouder />\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n                <section className={s.imgWBorder} >\r\n                    <img className={s.imgW} src={props.userprofile.imageWall} alt=\"\"/>\r\n                </section>\r\n                <section>\r\n                    <img className={s.imgA} src={props.userprofile.image} alt=\"cat\"/>\r\n                    <section>\r\n                        <ProfileStatusHook status={props.status} updateStatus={props.updateStatus} />\r\n                    </section>\r\n                     <section className={s.descript}>\r\n                       About Me: <span>{props.userprofile.description}</span>\r\n                    </section>\r\n                </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) =>{\r\n    let image = '';\r\n    if(props.userprofile){\r\n        image = props.userprofile.image\r\n    }\r\n    else{\r\n        image = 'https://st2.depositphotos.com/4111759/12123/v/950/depositphotos_121231710-stock-illustration-male-default-avatar-profile-gray.jpg';\r\n    }\r\n    return(\r\n        <div className={s.post}>\r\n            <img className={s.avatar} src={image} alt=\"Avatar\"/>\r\n            <section className={s.postContent}>{ props.massege }</section>\r\n            <section className={s.like}>Like <span className={s.likeNumber}>{ props.like }</span></section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator } from '../../../Utils/Validators/validators';\r\nimport { TextArea } from '../../common/formControles/formControler';\r\n\r\nconst maxLength300 = maxLengthCreator(300);\r\n\r\nconst MyPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field validate={[maxLength300]} name='newPostBody' component={TextArea} className={s.textarea}  placeholder=\"Enter your post...\" />\r\n            <button className={s.btn} >Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm({ form: 'myPostForm' })(MyPostForm)\r\n\r\nconst MyPosts = (props) =>{\r\n    let postsElements = props.profilePage.posts.map(p => < Post posts={props} userprofile={props.userprofile} massege={p.massege} like={p.like} key={p._id} />) // map() մեթոդը մասիվը փոևակերպում է մեկ այլ մեթոդի\r\n\r\n\r\n    let addNewPost = (values) =>{\r\n        props.setNewPost(values.newPostBody)\r\n    }\r\n\r\n\r\n    return(\r\n        <div className={s.myposts}>\r\n            <MyPostReduxForm  onSubmit={addNewPost} />\r\n            <section className={s.posts}>\r\n                {postsElements}\r\n            </section>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import { createSelector } from \"reselect\";\r\n\r\nconst getProfilePage = (state) => {\r\n    return state.profilePage;\r\n}\r\n\r\nexport const getProfilePageSelector = createSelector(getProfilePage, (profilePage) => {\r\n    return profilePage;\r\n})\r\n\r\nconst getUserProfile = (state) => {\r\n    return state.profilePage.userprofile;\r\n}\r\n\r\nexport const getUserProfileSelector = createSelector(getUserProfile, (userprofile) => {\r\n    return userprofile;\r\n})","import React from 'react';\r\nimport { addPost, setNewPost, getPosts } from '../../../redux/profile_reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\nimport { getProfilePageSelector, getUserProfileSelector } from '../../../redux/myPosts_selector';\r\n\r\n\r\nclass MyPostContainer extends React.Component{\r\n    componentDidMount(){\r\n        this.props.getPosts();\r\n    }    \r\n\r\n\r\n    render(){\r\n        return(\r\n            <MyPosts {...this.state} profilePage={this.props.profilePage} userprofile={this.props.userprofile} setNewPost={this.props.setNewPost} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        profilePage: getProfilePageSelector(state),\r\n        userprofile: getUserProfileSelector(state),\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost: (post) => {dispatch(addPost(post))},\r\n        setNewPost: (post) => {dispatch(setNewPost(post))},\r\n        getPosts: () => {dispatch(getPosts())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPostContainer);\r\n","import React from 'react';\r\nimport a_css from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\n\r\nconst Profile = (props) =>{\r\n    return(\r\n        <article className={a_css.Article}>\r\n            <ProfileInfo userprofile={props.userprofile}  status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer profilePage={props.profilePage}  />\r\n      </article>\r\n    )\r\n}\r\n\r\nexport default Profile;","import { createSelector } from \"reselect\";\r\n\r\nconst getUserprofile = (state) => {\r\n    return state.profilePage.userprofile;\r\n}\r\n\r\nexport const getUserprofileSelector = createSelector(getUserprofile, (userprofile) => {\r\n    return userprofile;\r\n})\r\n\r\nconst getAuthUserId = (state) => {\r\n    return state.auth.authUserId;\r\n}\r\n\r\nexport const getAuthUserIdSelector = createSelector(getAuthUserId, (authUserId) => {\r\n    return authUserId;\r\n})\r\n\r\nconst getStatus = (state) => {\r\n    return state.profilePage.status;\r\n}\r\n\r\nexport const getStatusSelector = createSelector(getStatus, (status) =>{\r\n    return status;\r\n}) ","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { setUserProfileThunk, getStatus, updateStatus} from '../../redux/profile_reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getUserprofileSelector, getAuthUserIdSelector, getStatusSelector } from '../../redux/profile_selector';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount(){\r\n        let userid = this.props.match.params.userId;\r\n        if(!userid){\r\n            userid = this.props.authUserId;\r\n        }\r\n        this.props.setUserProfileThunk(userid);\r\n        this.props.getStatus(userid);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Profile {...this.props}  userprofile={this.props.userprofile}  status={this.props.status} updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    userprofile: getUserprofileSelector(state),\r\n    authUserId: getAuthUserIdSelector(state),\r\n    status: getStatusSelector(state)\r\n});\r\n\r\nexport default compose(connect(mapStateToProps, {setUserProfileThunk, getStatus, updateStatus}), withRouter, withAuthRedirect)(ProfileContainer);\r\n\r\n\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n\r\n// let withRouterProfileContainer = withRouter(AuthRedirectComponent);\r\n\r\n// export default connect(mapStateToProps, {setUserProfileThunk})(withRouterProfileContainer);\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) =>{\r\n\r\n    return(\r\n        <header className={s.Header}>\r\n            <img src=\"https://cdn.kika.de/logo/bilder/logo-logo-die-welt-und-ich100_v-tsmall169_w-600_zc-de31b940.png?version=7362\" alt=\"logo\"/>\r\n            <section className={s.login}>\r\n                {props.isAuth ? <section id={s.auth}><span id={s.username}>{props.username}</span>  <img src={props.image} alt=\"user_image\"/><NavLink onClick={props.LogOut} id={s.signout} to='/main'>Sign Out</NavLink></section>  : <section><NavLink to=\"/Login\">Login</NavLink> <NavLink to=\"/signup\">Sign Up</NavLink></ section>  }\r\n                   \r\n            </section>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","import { createSelector } from \"reselect\";\r\n\r\nconst getUsername = (state) => {\r\n    return state.auth.username;\r\n}\r\n\r\nexport const getUsernameSelector = createSelector(getUsername, (username) => {\r\n    return username;\r\n})\r\n\r\nconst getImage = (state) => {\r\n    return state.auth.image;\r\n}\r\n\r\nexport const getImageSelector = createSelector(getImage, (image) => {\r\n    return image;\r\n})","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { setAuthentication, LogOut } from '../../redux/auth_reducer';\r\nimport { getIsAuthSelector } from '../../redux/login_selector';\r\nimport { getUsernameSelector, getImageSelector } from '../../redux/header_selector';\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <Header {...this.props} LogOut={this.props.LogOut} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: getIsAuthSelector(state),\r\n    username: getUsernameSelector(state),\r\n    image: getImageSelector(state)\r\n}); \r\n\r\nexport default connect(mapStateToProps, {setAuthentication, LogOut})(HeaderContainer);\r\n\r\n","import React from 'react';\r\nimport world from '../../Assets/Images/world.jpg';\r\nimport s from './main.module.css';\r\n\r\nconst MainPage = (props) => {\r\n    return(\r\n        <section id={s.main}>\r\n            <section id={s.image}>\r\n                <img src={world} alt=\"\"/>\r\n            </section>\r\n            <section id={s.txt}>Sign Up and start your own online market trading</section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import React, { Suspense } from 'react';\r\n\r\nexport const withSuspense  = (Component) => {\r\n\r\n    return (props) => {\r\n        return <Suspense fallback={<div>Загрузка...</div>}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    };\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Nav from './Components/Nav/Nav';\nimport Footer from './Components/Footer/Footer';\nimport {Route, BrowserRouter, withRouter} from 'react-router-dom';\nimport DialogsContainer from './Components/Dialogs/DialogsContainer';\nimport ProfileContainer from './Components/Profile/ProfileContainer';\nimport HeaderContainer from './Components/Header/HeaderContainer';\nimport MainPage from './Components/Main/main';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { initialazAPP } from './redux/app_reducer';\nimport Prelouder from './Components/common/prelouder/prelouder';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux_store';\nimport { withSuspense } from './hoc/withSuspense ';\nconst LoginContainer = React.lazy(() => import('./Components/Login/loginContainer'));\nconst UsersContainer = React.lazy(() => import('./Components/Users/usersContainer'));\nconst Settings = React.lazy(() => import('./Components/Settings/Settings'));\nconst Music = React.lazy(() => import('./Components/Music/Music'));\nconst News = React.lazy(() => import('./Components/News/News'));\nconst SignUpContainer = React.lazy(() => import('./Components/signUp/signUpContainer'));\n\n\n\nclass App extends React.Component {\n  componentDidMount(){\n    this.props.initialazAPP();\n  } \n  \n  render(){\n    if(!this.props.initialazed){\n      return <Prelouder />\n    }\n\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Nav />\n        <section className=\"app-wrapper-article\">\n          {/* <Route path='/profile' component={Profile} />\n          <Route path='/dialogs' component={Dialogs} />\n          <Route path='/news' component={News} />\n          <Route path='/music' component={Music} />\n          <Route path='/settings' component={Settings} /> */}\n\n          <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n          <Route path='/dialogs' render={() => <DialogsContainer  />} />\n          <Route path='/users' render={withSuspense(UsersContainer)} />\n          <Route path='/news' render={withSuspense(News)} />\n          <Route path='/music' render={withSuspense(Music)} />\n          <Route path='/settings' render={withSuspense(Settings)} />\n          <Route path='/login' render={withSuspense(LoginContainer)} />\n          <Route path='/signup' render={withSuspense(SignUpContainer) } />\n          <Route path='/main' render={() => <MainPage /> } />\n        </section> \n        <Footer />\n      </div>\n    );\n  }\n  \n}\n\nlet mapStateToProps = (state) => ({\n  initialazed: state.app.initialazed,\n})\n\nlet AppCompose = compose(withRouter, connect(mapStateToProps, {initialazAPP} ))(App);\n\nconst AppContainer = (props) => {\n  return <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <AppCompose />\n    </Provider>\n  </BrowserRouter>  \n  \n}\n\nexport default AppContainer;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as ServiceWorker from './serviceWorker';\r\nimport store from './redux/redux_store';\r\nimport AppContainer from './App';\r\n\r\n \r\nexport let rerenderEnireTree = () =>{\r\n    ReactDOM.render( <AppContainer />, document.getElementById('root'));\r\n}\r\n\r\nrerenderEnireTree(store.getState());\r\n\r\nstore.subscribe(() =>{\r\n    let state = store.getState();\r\n    rerenderEnireTree(state);\r\n});\r\n\r\nServiceWorker.unregister();","import { authAPI } from \"../api/reactAPI\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst SET_NEW_USER_DATA = 'SET_NEW_USER_DATA';\r\nconst SET_LOG_OUT = 'SET_LOG_OUT';\r\nconst IS_AUTH = 'IS'\r\n\r\n\r\nlet initialState ={\r\n    userid: null,\r\n    email: null,\r\n    username: null,\r\n    image: null,\r\n    authUserId: null,\r\n    isAuth: false,\r\n    message: ''\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SET_USER_DATA:\r\n            return{\r\n                ...state,\r\n                ...action.data,\r\n                userid: action.user._id,\r\n                authUserId: action.user._id,\r\n                username: action.user.firstName,\r\n                image: action.user.image,\r\n                isAuth: true\r\n            }\r\n        case SET_USER_DATA:\r\n            return{\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: false\r\n            }\r\n        case SET_NEW_USER_DATA:\r\n            return{\r\n                ...state,\r\n                message: action.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport const setAuthUserData = (user) =>({type: SET_USER_DATA, user});\r\nexport const setNewUserData = (message) => ({type: SET_NEW_USER_DATA, message });\r\nexport const setLogOut = () => ({type: SET_LOG_OUT});\r\n\r\n\r\nexport const setAuthentication = () => async (dispatch) => {\r\n    let response = await authAPI.setAuthentificate()\r\n    if(response.data.resultCode === 0){\r\n        dispatch(setAuthUserData(response.data.user));\r\n    }\r\n}\r\n\r\n\r\nexport const SetLoginDate = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.setLogin(email, password, rememberMe)\r\n    alert(response.data.message);\r\n    if(response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(response.data.user));\r\n    }else{\r\n        let action = stopSubmit('login', {password: response.data.message});\r\n        dispatch(action);\r\n    }\r\n        \r\n}\r\n\r\nexport const LogOut = () => async (disputch) => {\r\n    let response = await authAPI.setLogout()\r\n    alert(response.data.message);\r\n    if(response.data.resultCode === 0){\r\n        disputch(setLogOut());\r\n        document.location ='/main';\r\n    }\r\n}\r\n\r\nexport const SetNewUser = (firstName, lastName, birthday, gender, country, city, email, password, repassword) => async (dispatch) => {\r\n    let response = await authAPI.setNewUser(firstName, lastName, birthday, gender, country, city, email, password, repassword)\r\n    dispatch(setNewUserData(response.data.message));\r\n    if(response.data.resultCode === 0){\r\n        document.location = '/login';\r\n    }else{\r\n        switch(response.data.resultCode){\r\n            case 1:\r\n                dispatch(stopSubmit('signUp', {password: response.data.message, repassword: response.data.message}));\r\n                break;\r\n            case 2:\r\n                dispatch(stopSubmit('signUp', {email: response.data.message}));\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__pxhmK\",\"dialogs_items\":\"Dialogs_dialogs_items__1xa7Q\",\"messages\":\"Dialogs_messages__3whOe\",\"messageTextArea\":\"Dialogs_messageTextArea__344iE\",\"messageinput\":\"Dialogs_messageinput__3jxjb\",\"messageBtn\":\"Dialogs_messageBtn__rGhUW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Post_avatar__2QkyU\",\"like\":\"Post_like__3cFEH\",\"postContent\":\"Post_postContent__2iXUz\",\"post\":\"Post_post__3hrIz\",\"likeNumber\":\"Post_likeNumber__2Kx2r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3Jsgp\",\"login\":\"Header_login__2EXhn\",\"auth\":\"Header_auth__1GLuW\",\"username\":\"Header_username__3GDle\",\"signout\":\"Header_signout__33Lva\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2f48f\",\"active\":\"Dialog_active__28OkS\",\"dialogImg\":\"Dialog_dialogImg__2P88T\",\"dialogPerson\":\"Dialog_dialogPerson__2vvwt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"formControler_error__3-zZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgW\":\"ProfileInfo_imgW__2h4fo\",\"imgWBorder\":\"ProfileInfo_imgWBorder__1bMAO\",\"imgA\":\"ProfileInfo_imgA__2b38P\",\"descript\":\"ProfileInfo_descript__1f35F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"MyPosts_btn__16nF-\",\"textarea\":\"MyPosts_textarea__2--P6\",\"myposts\":\"MyPosts_myposts__1IoYI\",\"posts\":\"MyPosts_posts__2vcCw\"};","import React from 'react';\r\nimport s from './formControler.module.css'\r\n\r\nexport const TextArea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <section>\r\n            <section className={hasError && s.error}>\r\n                <textarea {...input} {...props}></textarea>\r\n            </section>\r\n            <section className={s.error}>\r\n               {hasError && <span>{meta.error}</span>} \r\n            </section>\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <section> \r\n            <section className={hasError && s.error}>\r\n                <input {...input} {...props}/>\r\n            </section>\r\n            <section className={s.error}>\r\n               {hasError && <span>{meta.error}</span>} \r\n            </section>\r\n        </section>\r\n\r\n    )\r\n}\r\n","export const required = (value) =>{\r\n    if(value){\r\n        return undefined;\r\n    }else{\r\n        return 'Field is required!';\r\n    }\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if( value && value.length > maxLength) return `Max length is ${maxLength} simbols!!!`;\r\n\r\n    return undefined;\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => (value) =>{\r\n    if(value && value.length < minLength) return `Min length is ${minLength} simbols!!!`;\r\n\r\n    return undefined;\r\n}","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setAuthentication } from '../redux/auth_reducer';\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        componentDidMount(){\r\n            this.props.setAuthentication();\r\n        }\r\n\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to='/main' />\r\n\r\n            return <Component{...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConectRedirectCompanent = connect(mapStateToProps, {setAuthentication})(RedirectComponent);\r\n\r\n    return ConectRedirectCompanent;\r\n}\r\n","import React from 'react';\r\nimport preloader from '../../../Assets/Images/Gear.gif';\r\nimport s from './preloader.module.css';\r\n\r\nconst Prelouder = (props) =>{\r\n    return(\r\n        <article>\r\n            <img id={s.img} src={preloader} />\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Prelouder;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__2Xhb3\",\"image\":\"main_image__1eXiK\",\"txt\":\"main_txt__1HBk7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__ldA7y\",\"my\":\"Message_my__1jljf\",\"your\":\"Message_your__3GrYw\"};"],"sourceRoot":""}