{"version":3,"sources":["Components/Users/users.module.css","Components/common/Paginator/paginator.module.css","Components/common/Paginator/paginator.jsx","Components/Users/usersClass.jsx","redux/user_selectors.js","Components/Users/usersContainer.jsx"],"names":["module","exports","Paginator","props","pagesCount","pages","pagesPartCount","Pages","i","push","partCount","Math","ceil","useState","partNumber","setPartNumber","partLeftPageNumber","partRightPageNumber","className","s","onClick","id","prev","btn","filter","p","map","key","page","currentPage","selectedPage","e","onPageChange","next","Users","users","u","user","_id","to","avatar","img","src","image","alt","info","name","nav","firstName","lastName","birthday","location","line","city","country","status","btn_sec","authUserId","followed","disabled","followingInProgress","some","setUnfollow","setFollow","getUserSelector","createSelector","state","usersPage","getPageSizeSelector","pageSize","getUserTotalCountSelector","totalUserCount","getCurrentPageSelector","getPagesSelector","getPagesPartCountSelector","getIsFetchingSelector","isFetching","getFollowingInProgressSelector","getAuthUserIdSelector","auth","UserContainer","Page","getUser","this","getUserThunkCreator","follow","unfollow","toogleFollowingProgres","React","Component","compose","connect","dispatch","getUsers","userid","withAuthRedirect"],"mappings":"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","file":"static/js/4.dd400958.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"users_avatar__eKDXN\",\"user\":\"users_user__3Yp3_\",\"users\":\"users_users__1IE8E\",\"img\":\"users_img__1R43r\",\"info\":\"users_info__31DmY\",\"name\":\"users_name__9GdqK\",\"line\":\"users_line__1yTCy\",\"status\":\"users_status__3g6bp\",\"location\":\"users_location__2mLJn\",\"btn_sec\":\"users_btn_sec__1bnNU\",\"btn\":\"users_btn__3w1IP\",\"selectedPage\":\"users_selectedPage__25hdM\",\"page\":\"users_page__1_tJH\",\"pages\":\"users_pages__299Ic\",\"nav\":\"users_nav__1Fl5f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"paginator_selectedPage__y_80Y\",\"page\":\"paginator_page__1JIKF\",\"pages\":\"paginator_pages__2Rg6d\",\"btn\":\"paginator_btn__33K3K\",\"prev\":\"paginator_prev__GDFl6\",\"next\":\"paginator_next__19OIU\"};","import React, { useState } from 'react';\r\nimport s from './paginator.module.css'\r\n\r\nconst Paginator = (props) => {\r\n  \r\n\r\n    let pagesCount = props.pages; //Math.ceil(this.props.totalUserCount / this.props.pageSize);\r\n    let pagesPartCount = props.pagesPartCount;\r\n    \r\n    let Pages = [];\r\n    for(let i = 1; i <= pagesCount; i++){\r\n        Pages.push(i);\r\n    }\r\n\r\n\r\n    let partCount = Math.ceil(pagesCount / pagesPartCount);\r\n    \r\n    \r\n    let [partNumber, setPartNumber] = useState(1);\r\n    let partLeftPageNumber = (partNumber - 1) * pagesPartCount + 1;\r\n    let partRightPageNumber = partNumber * pagesPartCount;\r\n\r\n    return(\r\n        < section className={s.pages}>\r\n            {partNumber > 1 ? <button onClick={() => setPartNumber(partNumber - 1)}  id={s.prev} className={s.btn}>Prev</button> : \"\"} \r\n            {Pages.filter(p => p >= partLeftPageNumber && p <= partRightPageNumber)\r\n            .map(p => {return <article key={p} className={s.page}><span className={props.currentPage === p && s.selectedPage} onClick={(e) => {props.onPageChange(p)}}>{p}</span></article>  })}\r\n            {partCount > partNumber ?  < button onClick={ () => setPartNumber(partNumber + 1)} id={s.next} className={s.btn}>Next</button>: \"\"} \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport s from './users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Paginator from '../common/Paginator/paginator';\r\n\r\n\r\n                                                                         \r\nconst Users = (props) => {    \r\n    // let pagesCount = props.pages; //Math.ceil(this.props.totalUserCount / this.props.pageSize);\r\n    // let Pages = [];\r\n    // for(let i = 1; i <= pagesCount; i++){\r\n    //     Pages.push(i);\r\n    // }\r\n    return(\r\n        <article>\r\n            <Paginator pages={props.pages} currentPage={props.currentPage} onPageChange={props.onPageChange} pagesPartCount={props.pagesPartCount} />\r\n            <section className={s.users}>\r\n                \r\n                { \r\n                    props.users.map( u => <section className={s.user} key={u._id}>\r\n                        <NavLink to={`/profile/${u._id}`}>\r\n                            <section className={s.avatar}>\r\n                                <img className={s.img} src={u.image} alt=\"User_Avatar\"/>\r\n                            </section>\r\n                        </NavLink>                      \r\n                        <section className={s.info}>\r\n                            <section className={s.name}>\r\n                                <NavLink className={s.nav} to={`/profile/${u._id}`}>\r\n                                <section>{u.firstName}</section>\r\n                                <section>{u.lastName}</section> \r\n                                </NavLink> \r\n                                <section>Age {u.birthday}</section>\r\n                            </section>\r\n                            <section className={s.location}>\r\n                                <section className={s.line}>{u.city}</section>\r\n                                <section className={s.line}>{u.country}</section>\r\n                            </section>\r\n                        </section>\r\n                        <section className={s.status}>\r\n                            {u.status}\r\n                        </section>\r\n                        <section className={s.btn_sec}>                           \r\n                            {u._id === props.authUserId ? <section></section> : \r\n                            <section> \r\n                            { u.followed ? <button disabled={props.followingInProgress.some(id => id === u._id)} onClick={() => {\r\n                                props.setUnfollow(u._id);                             \r\n                            }\r\n                                \r\n                            } className={s.btn}>Unfollow</button> : <button disabled={props.followingInProgress.some(id => id === u._id)} onClick={() => {\r\n                                props.setFollow(u._id);\r\n                            }\r\n\r\n                            } className={s.btn}>Follow</button>\r\n                            }                   \r\n                            </section>}\r\n                        </section>\r\n                       \r\n                    </section>)\r\n                }\r\n            </section>\r\n            <Paginator pages={props.pages} currentPage={props.currentPage} onPageChange={props.onPageChange} pagesPartCount={props.pagesPartCount} />\r\n        </article>\r\n    )\r\n    \r\n}\r\n\r\nexport default Users; \r\n","import { createSelector } from \"reselect\";\r\n\r\nconst getUsers = (state) => {\r\n   return state.usersPage.users;\r\n}\r\n\r\nexport const getUserSelector = createSelector(getUsers, (users) => {\r\n    return users;\r\n})\r\n\r\nconst getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getPageSizeSelector = createSelector(getPageSize, (pageSize) => {\r\n    return pageSize;\r\n})\r\n\r\nconst getUserTotalCount = (state) => {\r\n    return state.usersPage.totalUserCount;\r\n}\r\n\r\nexport const getUserTotalCountSelector = createSelector(getUserTotalCount, (totalUserCount) =>{\r\n    return totalUserCount;\r\n})\r\n\r\nconst getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getCurrentPageSelector = createSelector(getCurrentPage, (currentPage) => {\r\n    return currentPage;\r\n})\r\n\r\nconst getPages = (state) =>  {\r\n    return state.usersPage.pages;\r\n}\r\n\r\nexport const getPagesSelector = createSelector(getPages, (pages) => {\r\n    return pages;\r\n})\r\n\r\nconst getPagesPartCount = (state) =>{\r\n    return state.usersPage.pagesPartCount;\r\n}\r\n\r\nexport const getPagesPartCountSelector = createSelector(getPagesPartCount, (pagesPartCount) =>{\r\n    return pagesPartCount;\r\n})\r\n\r\nconst getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getIsFetchingSelector = createSelector(getIsFetching, (isFetching) => {\r\n    return isFetching;\r\n})\r\n\r\nconst getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const getFollowingInProgressSelector = createSelector(getFollowingInProgress, (followingInProgress) => {\r\n    return followingInProgress;\r\n})\r\n\r\nconst getAuthUserId = (state) => {\r\n    return state.auth.authUserId\r\n}\r\n\r\nexport const getAuthUserIdSelector = createSelector(getAuthUserId, (authUserId) => {\r\n    return authUserId;\r\n})","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Users from './usersClass';\r\nimport { getUserThunkCreator, getUsers, setFollow, setUnfollow } from '../../redux/users_reducer';\r\nimport Prelouder from '../common/prelouder/prelouder';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getUserSelector, getPageSizeSelector, getUserTotalCountSelector, getCurrentPageSelector, getPagesSelector, getIsFetchingSelector, getFollowingInProgressSelector, getAuthUserIdSelector, getPagesPartCountSelector } from '../../redux/user_selectors';\r\n\r\n\r\nclass UserContainer extends React.Component{\r\n    //componentDidMount-ում axios հարցում արվում է որպեսզի հենց սկզբից երեվան էջերեը\r\n    componentDidMount(){\r\n        this.props.getUserThunkCreator(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n\r\n\r\n    onPageChange = (Page) =>{\r\n        this.props.getUser(Page, this.props.pageSize)\r\n    }\r\n\r\n    render(){\r\n        return( <>\r\n            {this.props.isFetching ? <Prelouder /> : <Users authUserId={this.props.authUserId} currentPage={this.props.currentPage} onPageChange={this.onPageChange} follow={this.props.follow} unfollow={this.props.unfollow} users={this.props.users} pages={this.props.pages} followingInProgress={this.props.followingInProgress} toogleFollowingProgres={this.props.toogleFollowingProgres} setFollow={this.props.setFollow} setUnfollow={this.props.setUnfollow} pagesPartCount={this.props.pagesPartCount} />}\r\n        </>)\r\n      \r\n     }\r\n}\r\n\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUserCount: state.usersPage.totalUserCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         pages: state.usersPage.pages,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress,\r\n//         authUserId: state.auth.authUserId\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUserSelector(state),\r\n        pageSize: getPageSizeSelector(state),\r\n        pagesPartCount: getPagesPartCountSelector(state),\r\n        totalUserCount: getUserTotalCountSelector(state), \r\n        currentPage: getCurrentPageSelector(state),\r\n        pages: getPagesSelector(state),\r\n        isFetching: getIsFetchingSelector(state),\r\n        followingInProgress: getFollowingInProgressSelector(state),\r\n        authUserId: getAuthUserIdSelector(state)\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getUserThunkCreator: (currentPage, pageSize) => {\r\n            dispatch(getUserThunkCreator(currentPage, pageSize));\r\n        },\r\n        getUser: (Page, pageSize) => {\r\n            dispatch(getUsers(Page, pageSize));\r\n        },\r\n        setFollow: (userid) => {\r\n            dispatch(setFollow(userid));\r\n        },\r\n        setUnfollow: (userid) => {\r\n            dispatch(setUnfollow(userid));\r\n        },\r\n        \r\n    }\r\n}\r\n\r\n//mapDispatchToProps ֆունկցիաըի փոխարեն կարելի է օգատագործել\r\n        //{\r\n        // follow: followAC,\r\n        // unfollow: unfollowAC,\r\n        // setUsers: setUsersAC,\r\n        // setCurrentPage: setCurrentPageAC,\r\n        // setTotalUserCount: setTotalUserCountAC,\r\n        // setPagesCount: setPagesCountAC,\r\n        // toogleIsFetching: toogleIsFetchingAC,\r\n        //}\r\n// Իսկ եթե օբյեկտի անեւն համապատասխանի actionCreator-ի անվանա օր՝ follow: follow, ապա կարելի ե գրել այսպես՝\r\n        //{\r\n        // follow,\r\n        // unfollow,\r\n        // setUsers,\r\n        // setCurrentPage,\r\n        // setTotalUserCount,\r\n        // setPagesCount,\r\n        // toogleIsFetching,\r\n        // setUserFollowStatus,\r\n        // toogleFollowingProgres,\r\n        // getUserThunkCreator\r\n        //}\r\n        \r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(UserContainer);\r\n\r\n// let UserAuthRedirectComponent = withAuthRedirect(UserContainer);\r\n        \r\n// const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UserAuthRedirectComponent);\r\n\r\n// export default UsersContainer;"],"sourceRoot":""}