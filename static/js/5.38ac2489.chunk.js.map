{"version":3,"sources":["Components/Login/login.module.css","Components/Login/login.jsx","Components/Login/loginContainer.jsx"],"names":["module","exports","maxLength30","maxLengthCreator","maxLength20","minLength6","minLengthCreator","LoginReduxForm","reduxForm","form","props","id","s","loginForm","onSubmit","handleSubmit","login","Field","validate","required","className","inputFiled","name","type","placeholder","component","Input","checkbox","rem","btn","Login","isAuth","to","value","SetLoginDate","email","password","rememberMe","LoginContainer","this","React","Component","connect","state","getIsAuthSelector"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,MAAQ,qBAAqB,WAAa,0BAA0B,SAAW,wBAAwB,IAAM,qB,gKCM9JC,EAAcC,YAAiB,IAC/BC,EAAcD,YAAiB,IAC/BE,EAAaC,YAAiB,GAsB9BC,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EApBL,SAACE,GACf,OACI,0BAAMC,GAAIC,IAAEC,UAAWC,SAAUJ,EAAMK,cACnC,0BAAMJ,GAAIC,IAAEI,OAAZ,SACA,iCACI,kBAACC,EAAA,EAAD,CAAOC,SAAU,CAAEC,IAAUjB,GAAekB,UAAWR,IAAES,WAAYC,KAAK,QAAQC,KAAK,QAAQC,YAAY,QAAQC,UAAWC,OAElI,iCACI,kBAACT,EAAA,EAAD,CAAOC,SAAU,CAAEC,IAAUf,EAAaC,GAAae,UAAWR,IAAES,WAAYC,KAAK,WAAWC,KAAK,WAAWC,YAAY,WAAWC,UAAWC,OAEtJ,iCACI,kBAACT,EAAA,EAAD,CAAOM,KAAK,WAAWD,KAAK,aAAaX,GAAIC,IAAEe,SAAUF,UAAWC,MAAS,0BAAMf,GAAIC,IAAEgB,KAAZ,gBAEjF,iCACI,4BAAQjB,GAAIC,IAAEiB,KAAd,gBAuBDC,EAfD,SAACpB,GAKX,OAAGA,EAAMqB,OACE,kBAAC,IAAD,CAAUC,GAAG,aAIpB,kBAACzB,EAAD,CAAgBO,SATH,SAACmB,GACdvB,EAAMwB,aAAaD,EAAME,MAAOF,EAAMG,SAAUH,EAAMI,gB,yBC5BxDC,E,iLAGE,OACI,kBAAC,EAAD,CAAOJ,aAAcK,KAAK7B,MAAMwB,aAAcH,OAAQQ,KAAK7B,MAAMqB,a,GAJhDS,IAAMC,WAgBnBC,uBAPM,SAACC,GACnB,MAAM,CACFZ,OAAQa,YAAkBD,MAKO,CAACT,kBAA1BQ,CAAyCJ","file":"static/js/5.38ac2489.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"login_loginForm__2fRH5\",\"login\":\"login_login__18nyx\",\"inputFiled\":\"login_inputFiled__M1iLY\",\"checkbox\":\"login_checkbox__3YA5P\",\"btn\":\"login_btn__1gksQ\"};","import React from 'react';\r\nimport s from './login.module.css';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { required, maxLengthCreator, minLengthCreator } from '../../Utils/Validators/validators';\r\nimport { Input } from '../common/formControles/formControler';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\nconst maxLength20 = maxLengthCreator(20);\r\nconst minLength6 = minLengthCreator(6);\r\n\r\nconst LoginForm = (props) => {\r\n    return(\r\n        <form id={s.loginForm} onSubmit={props.handleSubmit}>\r\n            <span id={s.login}>Login</span>\r\n            <section>\r\n                <Field validate={[ required, maxLength30 ]} className={s.inputFiled} name='email' type=\"email\" placeholder=\"Email\" component={Input} />\r\n            </section>\r\n            <section>\r\n                <Field validate={[ required, maxLength20, minLength6]} className={s.inputFiled} name=\"password\" type=\"password\" placeholder=\"Password\" component={Input} />\r\n            </section>\r\n            <section>\r\n                <Field type=\"checkbox\" name=\"rememberMe\" id={s.checkbox} component={Input} /><span id={s.rem} >Remember me</span>\r\n            </section>\r\n            <section>\r\n                <button id={s.btn}>Sign In</button>\r\n            </section>\r\n        </form>\r\n        )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const loginData =(value) => {\r\n        props.SetLoginDate(value.email, value.password, value.rememberMe)\r\n    }\r\n\r\n    if(props.isAuth){\r\n        return <Redirect to='/profile' />\r\n    }\r\n\r\n    return(\r\n        <LoginReduxForm onSubmit={loginData} />\r\n    )\r\n}\r\n\r\n\r\nexport default Login;","import Login from \"./login\";\r\nimport React from 'react';\r\nimport { SetLoginDate } from \"../../redux/auth_reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIsAuthSelector } from \"../../redux/login_selector\";\r\n\r\n\r\nclass LoginContainer extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <Login SetLoginDate={this.props.SetLoginDate} isAuth={this.props.isAuth} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        isAuth: getIsAuthSelector(state)\r\n    }\r\n}\r\n\r\n\r\nexport default  connect(mapStateToProps, {SetLoginDate})(LoginContainer); "],"sourceRoot":""}